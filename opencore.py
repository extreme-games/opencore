# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_opencore', [dirname(__file__)])
        except ImportError:
            import _opencore
            return _opencore
        if fp is not None:
            try:
                _mod = imp.load_module('_opencore', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _opencore = swig_import_helper()
    del swig_import_helper
else:
    import _opencore
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


OPENCORE_VERSION = _opencore.OPENCORE_VERSION
EVENT_START = _opencore.EVENT_START
EVENT_STOP = _opencore.EVENT_STOP
EVENT_LOGIN = _opencore.EVENT_LOGIN
EVENT_KILL = _opencore.EVENT_KILL
EVENT_FIRSTSEEN = _opencore.EVENT_FIRSTSEEN
EVENT_ENTER = _opencore.EVENT_ENTER
EVENT_LEAVE = _opencore.EVENT_LEAVE
EVENT_CHANGE = _opencore.EVENT_CHANGE
EVENT_DEADSLOT = _opencore.EVENT_DEADSLOT
EVENT_MESSAGE = _opencore.EVENT_MESSAGE
EVENT_ALERT = _opencore.EVENT_ALERT
EVENT_UPDATE = _opencore.EVENT_UPDATE
EVENT_TICK = _opencore.EVENT_TICK
EVENT_TIMER = _opencore.EVENT_TIMER
EVENT_COMMAND = _opencore.EVENT_COMMAND
EVENT_INFO = _opencore.EVENT_INFO
EVENT_EINFO = _opencore.EVENT_EINFO
EVENT_DISCONNECT = _opencore.EVENT_DISCONNECT
EVENT_TRANSFER = _opencore.EVENT_TRANSFER
EVENT_ARENA_CHANGE = _opencore.EVENT_ARENA_CHANGE
EVENT_ARENA_LIST = _opencore.EVENT_ARENA_LIST
EVENT_QUERY_RESULT = _opencore.EVENT_QUERY_RESULT
EVENT_CONFIG_CHANGE = _opencore.EVENT_CONFIG_CHANGE
EVENT_FLAG_VICTORY = _opencore.EVENT_FLAG_VICTORY
EVENT_ATTACH = _opencore.EVENT_ATTACH
EVENT_DETACH = _opencore.EVENT_DETACH
EVENT_USER_EVENT = _opencore.EVENT_USER_EVENT
EVENT_USER_CALL = _opencore.EVENT_USER_CALL
class point(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, point, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, point, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _opencore.point_x_set
    __swig_getmethods__["x"] = _opencore.point_x_get
    if _newclass:x = _swig_property(_opencore.point_x_get, _opencore.point_x_set)
    __swig_setmethods__["y"] = _opencore.point_y_set
    __swig_getmethods__["y"] = _opencore.point_y_get
    if _newclass:y = _swig_property(_opencore.point_y_get, _opencore.point_y_set)
    def __init__(self): 
        this = _opencore.new_point()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_point
    __del__ = lambda self : None;
point_swigregister = _opencore.point_swigregister
point_swigregister(point)

class arena_list(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, arena_list, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, arena_list, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _opencore.arena_list_name_set
    __swig_getmethods__["name"] = _opencore.arena_list_name_get
    if _newclass:name = _swig_property(_opencore.arena_list_name_get, _opencore.arena_list_name_set)
    __swig_setmethods__["count"] = _opencore.arena_list_count_set
    __swig_getmethods__["count"] = _opencore.arena_list_count_get
    if _newclass:count = _swig_property(_opencore.arena_list_count_get, _opencore.arena_list_count_set)
    __swig_setmethods__["current_arena"] = _opencore.arena_list_current_arena_set
    __swig_getmethods__["current_arena"] = _opencore.arena_list_current_arena_get
    if _newclass:current_arena = _swig_property(_opencore.arena_list_current_arena_get, _opencore.arena_list_current_arena_set)
    def __init__(self): 
        this = _opencore.new_arena_list()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_arena_list
    __del__ = lambda self : None;
arena_list_swigregister = _opencore.arena_list_swigregister
arena_list_swigregister(arena_list)

class einfo_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, einfo_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, einfo_, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _opencore.einfo__name_set
    __swig_getmethods__["name"] = _opencore.einfo__name_get
    if _newclass:name = _swig_property(_opencore.einfo__name_get, _opencore.einfo__name_set)
    __swig_setmethods__["userid"] = _opencore.einfo__userid_set
    __swig_getmethods__["userid"] = _opencore.einfo__userid_get
    if _newclass:userid = _swig_property(_opencore.einfo__userid_get, _opencore.einfo__userid_set)
    __swig_setmethods__["idle_seconds"] = _opencore.einfo__idle_seconds_set
    __swig_getmethods__["idle_seconds"] = _opencore.einfo__idle_seconds_get
    if _newclass:idle_seconds = _swig_property(_opencore.einfo__idle_seconds_get, _opencore.einfo__idle_seconds_set)
    __swig_setmethods__["timer_drift"] = _opencore.einfo__timer_drift_set
    __swig_getmethods__["timer_drift"] = _opencore.einfo__timer_drift_get
    if _newclass:timer_drift = _swig_property(_opencore.einfo__timer_drift_get, _opencore.einfo__timer_drift_set)
    __swig_getmethods__["res"] = _opencore.einfo__res_get
    if _newclass:res = _swig_property(_opencore.einfo__res_get)
    def __init__(self): 
        this = _opencore.new_einfo_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_einfo_
    __del__ = lambda self : None;
einfo__swigregister = _opencore.einfo__swigregister
einfo__swigregister(einfo_)

class einfo__res(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, einfo__res, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, einfo__res, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _opencore.einfo__res_x_set
    __swig_getmethods__["x"] = _opencore.einfo__res_x_get
    if _newclass:x = _swig_property(_opencore.einfo__res_x_get, _opencore.einfo__res_x_set)
    __swig_setmethods__["y"] = _opencore.einfo__res_y_set
    __swig_getmethods__["y"] = _opencore.einfo__res_y_get
    if _newclass:y = _swig_property(_opencore.einfo__res_y_get, _opencore.einfo__res_y_set)
    def __init__(self): 
        this = _opencore.new_einfo__res()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_einfo__res
    __del__ = lambda self : None;
einfo__res_swigregister = _opencore.einfo__res_swigregister
einfo__res_swigregister(einfo__res)

class info_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info_, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _opencore.info__name_set
    __swig_getmethods__["name"] = _opencore.info__name_get
    if _newclass:name = _swig_property(_opencore.info__name_get, _opencore.info__name_set)
    __swig_setmethods__["ip"] = _opencore.info__ip_set
    __swig_getmethods__["ip"] = _opencore.info__ip_get
    if _newclass:ip = _swig_property(_opencore.info__ip_get, _opencore.info__ip_set)
    __swig_setmethods__["timezonebias"] = _opencore.info__timezonebias_set
    __swig_getmethods__["timezonebias"] = _opencore.info__timezonebias_get
    if _newclass:timezonebias = _swig_property(_opencore.info__timezonebias_get, _opencore.info__timezonebias_set)
    __swig_setmethods__["freq"] = _opencore.info__freq_set
    __swig_getmethods__["freq"] = _opencore.info__freq_get
    if _newclass:freq = _swig_property(_opencore.info__freq_get, _opencore.info__freq_set)
    __swig_setmethods__["demo"] = _opencore.info__demo_set
    __swig_getmethods__["demo"] = _opencore.info__demo_get
    if _newclass:demo = _swig_property(_opencore.info__demo_get, _opencore.info__demo_set)
    __swig_setmethods__["mid"] = _opencore.info__mid_set
    __swig_getmethods__["mid"] = _opencore.info__mid_get
    if _newclass:mid = _swig_property(_opencore.info__mid_get, _opencore.info__mid_set)
    __swig_setmethods__["bytes_per_second"] = _opencore.info__bytes_per_second_set
    __swig_getmethods__["bytes_per_second"] = _opencore.info__bytes_per_second_get
    if _newclass:bytes_per_second = _swig_property(_opencore.info__bytes_per_second_get, _opencore.info__bytes_per_second_set)
    __swig_setmethods__["low_bandwidth"] = _opencore.info__low_bandwidth_set
    __swig_getmethods__["low_bandwidth"] = _opencore.info__low_bandwidth_get
    if _newclass:low_bandwidth = _swig_property(_opencore.info__low_bandwidth_get, _opencore.info__low_bandwidth_set)
    __swig_setmethods__["message_logging"] = _opencore.info__message_logging_set
    __swig_getmethods__["message_logging"] = _opencore.info__message_logging_get
    if _newclass:message_logging = _swig_property(_opencore.info__message_logging_get, _opencore.info__message_logging_set)
    __swig_setmethods__["connect_type"] = _opencore.info__connect_type_set
    __swig_getmethods__["connect_type"] = _opencore.info__connect_type_get
    if _newclass:connect_type = _swig_property(_opencore.info__connect_type_get, _opencore.info__connect_type_set)
    __swig_getmethods__["ping"] = _opencore.info__ping_get
    if _newclass:ping = _swig_property(_opencore.info__ping_get)
    __swig_getmethods__["ploss"] = _opencore.info__ploss_get
    if _newclass:ploss = _swig_property(_opencore.info__ploss_get)
    __swig_getmethods__["stats"] = _opencore.info__stats_get
    if _newclass:stats = _swig_property(_opencore.info__stats_get)
    __swig_getmethods__["usage"] = _opencore.info__usage_get
    if _newclass:usage = _swig_property(_opencore.info__usage_get)
    def __init__(self): 
        this = _opencore.new_info_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info_
    __del__ = lambda self : None;
info__swigregister = _opencore.info__swigregister
info__swigregister(info_)

class info__usage(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info__usage, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info__usage, name)
    __repr__ = _swig_repr
    __swig_getmethods__["session"] = _opencore.info__usage_session_get
    if _newclass:session = _swig_property(_opencore.info__usage_session_get)
    __swig_getmethods__["total"] = _opencore.info__usage_total_get
    if _newclass:total = _swig_property(_opencore.info__usage_total_get)
    __swig_getmethods__["created"] = _opencore.info__usage_created_get
    if _newclass:created = _swig_property(_opencore.info__usage_created_get)
    def __init__(self): 
        this = _opencore.new_info__usage()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info__usage
    __del__ = lambda self : None;
info__usage_swigregister = _opencore.info__usage_swigregister
info__usage_swigregister(info__usage)

class info__usage_created(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info__usage_created, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info__usage_created, name)
    __repr__ = _swig_repr
    __swig_setmethods__["month"] = _opencore.info__usage_created_month_set
    __swig_getmethods__["month"] = _opencore.info__usage_created_month_get
    if _newclass:month = _swig_property(_opencore.info__usage_created_month_get, _opencore.info__usage_created_month_set)
    __swig_setmethods__["day"] = _opencore.info__usage_created_day_set
    __swig_getmethods__["day"] = _opencore.info__usage_created_day_get
    if _newclass:day = _swig_property(_opencore.info__usage_created_day_get, _opencore.info__usage_created_day_set)
    __swig_setmethods__["year"] = _opencore.info__usage_created_year_set
    __swig_getmethods__["year"] = _opencore.info__usage_created_year_get
    if _newclass:year = _swig_property(_opencore.info__usage_created_year_get, _opencore.info__usage_created_year_set)
    __swig_setmethods__["hours"] = _opencore.info__usage_created_hours_set
    __swig_getmethods__["hours"] = _opencore.info__usage_created_hours_get
    if _newclass:hours = _swig_property(_opencore.info__usage_created_hours_get, _opencore.info__usage_created_hours_set)
    __swig_setmethods__["minutes"] = _opencore.info__usage_created_minutes_set
    __swig_getmethods__["minutes"] = _opencore.info__usage_created_minutes_get
    if _newclass:minutes = _swig_property(_opencore.info__usage_created_minutes_get, _opencore.info__usage_created_minutes_set)
    __swig_setmethods__["seconds"] = _opencore.info__usage_created_seconds_set
    __swig_getmethods__["seconds"] = _opencore.info__usage_created_seconds_get
    if _newclass:seconds = _swig_property(_opencore.info__usage_created_seconds_get, _opencore.info__usage_created_seconds_set)
    def __init__(self): 
        this = _opencore.new_info__usage_created()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info__usage_created
    __del__ = lambda self : None;
info__usage_created_swigregister = _opencore.info__usage_created_swigregister
info__usage_created_swigregister(info__usage_created)

class info__usage_total(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info__usage_total, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info__usage_total, name)
    __repr__ = _swig_repr
    __swig_setmethods__["days"] = _opencore.info__usage_total_days_set
    __swig_getmethods__["days"] = _opencore.info__usage_total_days_get
    if _newclass:days = _swig_property(_opencore.info__usage_total_days_get, _opencore.info__usage_total_days_set)
    __swig_setmethods__["hours"] = _opencore.info__usage_total_hours_set
    __swig_getmethods__["hours"] = _opencore.info__usage_total_hours_get
    if _newclass:hours = _swig_property(_opencore.info__usage_total_hours_get, _opencore.info__usage_total_hours_set)
    __swig_setmethods__["minutes"] = _opencore.info__usage_total_minutes_set
    __swig_getmethods__["minutes"] = _opencore.info__usage_total_minutes_get
    if _newclass:minutes = _swig_property(_opencore.info__usage_total_minutes_get, _opencore.info__usage_total_minutes_set)
    def __init__(self): 
        this = _opencore.new_info__usage_total()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info__usage_total
    __del__ = lambda self : None;
info__usage_total_swigregister = _opencore.info__usage_total_swigregister
info__usage_total_swigregister(info__usage_total)

class info__usage_session(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info__usage_session, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info__usage_session, name)
    __repr__ = _swig_repr
    __swig_setmethods__["days"] = _opencore.info__usage_session_days_set
    __swig_getmethods__["days"] = _opencore.info__usage_session_days_get
    if _newclass:days = _swig_property(_opencore.info__usage_session_days_get, _opencore.info__usage_session_days_set)
    __swig_setmethods__["hours"] = _opencore.info__usage_session_hours_set
    __swig_getmethods__["hours"] = _opencore.info__usage_session_hours_get
    if _newclass:hours = _swig_property(_opencore.info__usage_session_hours_get, _opencore.info__usage_session_hours_set)
    __swig_setmethods__["minutes"] = _opencore.info__usage_session_minutes_set
    __swig_getmethods__["minutes"] = _opencore.info__usage_session_minutes_get
    if _newclass:minutes = _swig_property(_opencore.info__usage_session_minutes_get, _opencore.info__usage_session_minutes_set)
    def __init__(self): 
        this = _opencore.new_info__usage_session()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info__usage_session
    __del__ = lambda self : None;
info__usage_session_swigregister = _opencore.info__usage_session_swigregister
info__usage_session_swigregister(info__usage_session)

class info__stats(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info__stats, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info__stats, name)
    __repr__ = _swig_repr
    __swig_setmethods__["f1"] = _opencore.info__stats_f1_set
    __swig_getmethods__["f1"] = _opencore.info__stats_f1_get
    if _newclass:f1 = _swig_property(_opencore.info__stats_f1_get, _opencore.info__stats_f1_set)
    __swig_setmethods__["f2"] = _opencore.info__stats_f2_set
    __swig_getmethods__["f2"] = _opencore.info__stats_f2_get
    if _newclass:f2 = _swig_property(_opencore.info__stats_f2_get, _opencore.info__stats_f2_set)
    __swig_setmethods__["f3"] = _opencore.info__stats_f3_set
    __swig_getmethods__["f3"] = _opencore.info__stats_f3_get
    if _newclass:f3 = _swig_property(_opencore.info__stats_f3_get, _opencore.info__stats_f3_set)
    __swig_setmethods__["f4"] = _opencore.info__stats_f4_set
    __swig_getmethods__["f4"] = _opencore.info__stats_f4_get
    if _newclass:f4 = _swig_property(_opencore.info__stats_f4_get, _opencore.info__stats_f4_set)
    __swig_getmethods__["c2s"] = _opencore.info__stats_c2s_get
    if _newclass:c2s = _swig_property(_opencore.info__stats_c2s_get)
    __swig_getmethods__["s2c"] = _opencore.info__stats_s2c_get
    if _newclass:s2c = _swig_property(_opencore.info__stats_s2c_get)
    def __init__(self): 
        this = _opencore.new_info__stats()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info__stats
    __del__ = lambda self : None;
info__stats_swigregister = _opencore.info__stats_swigregister
info__stats_swigregister(info__stats)

class info__stats_s2c(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info__stats_s2c, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info__stats_s2c, name)
    __repr__ = _swig_repr
    __swig_setmethods__["slow"] = _opencore.info__stats_s2c_slow_set
    __swig_getmethods__["slow"] = _opencore.info__stats_s2c_slow_get
    if _newclass:slow = _swig_property(_opencore.info__stats_s2c_slow_get, _opencore.info__stats_s2c_slow_set)
    __swig_setmethods__["fast"] = _opencore.info__stats_s2c_fast_set
    __swig_getmethods__["fast"] = _opencore.info__stats_s2c_fast_get
    if _newclass:fast = _swig_property(_opencore.info__stats_s2c_fast_get, _opencore.info__stats_s2c_fast_set)
    __swig_setmethods__["pct"] = _opencore.info__stats_s2c_pct_set
    __swig_getmethods__["pct"] = _opencore.info__stats_s2c_pct_get
    if _newclass:pct = _swig_property(_opencore.info__stats_s2c_pct_get, _opencore.info__stats_s2c_pct_set)
    __swig_setmethods__["total_slow"] = _opencore.info__stats_s2c_total_slow_set
    __swig_getmethods__["total_slow"] = _opencore.info__stats_s2c_total_slow_get
    if _newclass:total_slow = _swig_property(_opencore.info__stats_s2c_total_slow_get, _opencore.info__stats_s2c_total_slow_set)
    __swig_setmethods__["total_fast"] = _opencore.info__stats_s2c_total_fast_set
    __swig_getmethods__["total_fast"] = _opencore.info__stats_s2c_total_fast_get
    if _newclass:total_fast = _swig_property(_opencore.info__stats_s2c_total_fast_get, _opencore.info__stats_s2c_total_fast_set)
    __swig_setmethods__["total_pct"] = _opencore.info__stats_s2c_total_pct_set
    __swig_getmethods__["total_pct"] = _opencore.info__stats_s2c_total_pct_get
    if _newclass:total_pct = _swig_property(_opencore.info__stats_s2c_total_pct_get, _opencore.info__stats_s2c_total_pct_set)
    def __init__(self): 
        this = _opencore.new_info__stats_s2c()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info__stats_s2c
    __del__ = lambda self : None;
info__stats_s2c_swigregister = _opencore.info__stats_s2c_swigregister
info__stats_s2c_swigregister(info__stats_s2c)

class info__stats_c2s(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info__stats_c2s, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info__stats_c2s, name)
    __repr__ = _swig_repr
    __swig_setmethods__["slow"] = _opencore.info__stats_c2s_slow_set
    __swig_getmethods__["slow"] = _opencore.info__stats_c2s_slow_get
    if _newclass:slow = _swig_property(_opencore.info__stats_c2s_slow_get, _opencore.info__stats_c2s_slow_set)
    __swig_setmethods__["fast"] = _opencore.info__stats_c2s_fast_set
    __swig_getmethods__["fast"] = _opencore.info__stats_c2s_fast_get
    if _newclass:fast = _swig_property(_opencore.info__stats_c2s_fast_get, _opencore.info__stats_c2s_fast_set)
    __swig_setmethods__["pct"] = _opencore.info__stats_c2s_pct_set
    __swig_getmethods__["pct"] = _opencore.info__stats_c2s_pct_get
    if _newclass:pct = _swig_property(_opencore.info__stats_c2s_pct_get, _opencore.info__stats_c2s_pct_set)
    __swig_setmethods__["total_slow"] = _opencore.info__stats_c2s_total_slow_set
    __swig_getmethods__["total_slow"] = _opencore.info__stats_c2s_total_slow_get
    if _newclass:total_slow = _swig_property(_opencore.info__stats_c2s_total_slow_get, _opencore.info__stats_c2s_total_slow_set)
    __swig_setmethods__["total_fast"] = _opencore.info__stats_c2s_total_fast_set
    __swig_getmethods__["total_fast"] = _opencore.info__stats_c2s_total_fast_get
    if _newclass:total_fast = _swig_property(_opencore.info__stats_c2s_total_fast_get, _opencore.info__stats_c2s_total_fast_set)
    __swig_setmethods__["total_pct"] = _opencore.info__stats_c2s_total_pct_set
    __swig_getmethods__["total_pct"] = _opencore.info__stats_c2s_total_pct_get
    if _newclass:total_pct = _swig_property(_opencore.info__stats_c2s_total_pct_get, _opencore.info__stats_c2s_total_pct_set)
    def __init__(self): 
        this = _opencore.new_info__stats_c2s()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info__stats_c2s
    __del__ = lambda self : None;
info__stats_c2s_swigregister = _opencore.info__stats_c2s_swigregister
info__stats_c2s_swigregister(info__stats_c2s)

class info__ploss(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info__ploss, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info__ploss, name)
    __repr__ = _swig_repr
    __swig_setmethods__["s2c"] = _opencore.info__ploss_s2c_set
    __swig_getmethods__["s2c"] = _opencore.info__ploss_s2c_get
    if _newclass:s2c = _swig_property(_opencore.info__ploss_s2c_get, _opencore.info__ploss_s2c_set)
    __swig_setmethods__["c2s"] = _opencore.info__ploss_c2s_set
    __swig_getmethods__["c2s"] = _opencore.info__ploss_c2s_get
    if _newclass:c2s = _swig_property(_opencore.info__ploss_c2s_get, _opencore.info__ploss_c2s_set)
    __swig_setmethods__["s2c_wep"] = _opencore.info__ploss_s2c_wep_set
    __swig_getmethods__["s2c_wep"] = _opencore.info__ploss_s2c_wep_get
    if _newclass:s2c_wep = _swig_property(_opencore.info__ploss_s2c_wep_get, _opencore.info__ploss_s2c_wep_set)
    def __init__(self): 
        this = _opencore.new_info__ploss()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info__ploss
    __del__ = lambda self : None;
info__ploss_swigregister = _opencore.info__ploss_swigregister
info__ploss_swigregister(info__ploss)

class info__ping(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, info__ping, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, info__ping, name)
    __repr__ = _swig_repr
    __swig_setmethods__["current"] = _opencore.info__ping_current_set
    __swig_getmethods__["current"] = _opencore.info__ping_current_get
    if _newclass:current = _swig_property(_opencore.info__ping_current_get, _opencore.info__ping_current_set)
    __swig_setmethods__["low"] = _opencore.info__ping_low_set
    __swig_getmethods__["low"] = _opencore.info__ping_low_get
    if _newclass:low = _swig_property(_opencore.info__ping_low_get, _opencore.info__ping_low_set)
    __swig_setmethods__["high"] = _opencore.info__ping_high_set
    __swig_getmethods__["high"] = _opencore.info__ping_high_get
    if _newclass:high = _swig_property(_opencore.info__ping_high_get, _opencore.info__ping_high_set)
    __swig_setmethods__["average"] = _opencore.info__ping_average_set
    __swig_getmethods__["average"] = _opencore.info__ping_average_get
    if _newclass:average = _swig_property(_opencore.info__ping_average_get, _opencore.info__ping_average_set)
    def __init__(self): 
        this = _opencore.new_info__ping()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_info__ping
    __del__ = lambda self : None;
info__ping_swigregister = _opencore.info__ping_swigregister
info__ping_swigregister(info__ping)

class PLAYER_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PLAYER_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PLAYER_, name)
    __repr__ = _swig_repr
    __swig_setmethods__["here_next"] = _opencore.PLAYER__here_next_set
    __swig_getmethods__["here_next"] = _opencore.PLAYER__here_next_get
    if _newclass:here_next = _swig_property(_opencore.PLAYER__here_next_get, _opencore.PLAYER__here_next_set)
    __swig_setmethods__["here_prev"] = _opencore.PLAYER__here_prev_set
    __swig_getmethods__["here_prev"] = _opencore.PLAYER__here_prev_get
    if _newclass:here_prev = _swig_property(_opencore.PLAYER__here_prev_get, _opencore.PLAYER__here_prev_set)
    __swig_setmethods__["spec_next"] = _opencore.PLAYER__spec_next_set
    __swig_getmethods__["spec_next"] = _opencore.PLAYER__spec_next_get
    if _newclass:spec_next = _swig_property(_opencore.PLAYER__spec_next_get, _opencore.PLAYER__spec_next_set)
    __swig_setmethods__["spec_prev"] = _opencore.PLAYER__spec_prev_set
    __swig_getmethods__["spec_prev"] = _opencore.PLAYER__spec_prev_get
    if _newclass:spec_prev = _swig_property(_opencore.PLAYER__spec_prev_get, _opencore.PLAYER__spec_prev_set)
    __swig_setmethods__["ship_next"] = _opencore.PLAYER__ship_next_set
    __swig_getmethods__["ship_next"] = _opencore.PLAYER__ship_next_get
    if _newclass:ship_next = _swig_property(_opencore.PLAYER__ship_next_get, _opencore.PLAYER__ship_next_set)
    __swig_setmethods__["ship_prev"] = _opencore.PLAYER__ship_prev_set
    __swig_getmethods__["ship_prev"] = _opencore.PLAYER__ship_prev_get
    if _newclass:ship_prev = _swig_property(_opencore.PLAYER__ship_prev_get, _opencore.PLAYER__ship_prev_set)
    __swig_setmethods__["name"] = _opencore.PLAYER__name_set
    __swig_getmethods__["name"] = _opencore.PLAYER__name_get
    if _newclass:name = _swig_property(_opencore.PLAYER__name_get, _opencore.PLAYER__name_set)
    __swig_setmethods__["squad"] = _opencore.PLAYER__squad_set
    __swig_getmethods__["squad"] = _opencore.PLAYER__squad_get
    if _newclass:squad = _swig_property(_opencore.PLAYER__squad_get, _opencore.PLAYER__squad_set)
    __swig_setmethods__["pid"] = _opencore.PLAYER__pid_set
    __swig_getmethods__["pid"] = _opencore.PLAYER__pid_get
    if _newclass:pid = _swig_property(_opencore.PLAYER__pid_get, _opencore.PLAYER__pid_set)
    __swig_setmethods__["enter_tick"] = _opencore.PLAYER__enter_tick_set
    __swig_getmethods__["enter_tick"] = _opencore.PLAYER__enter_tick_get
    if _newclass:enter_tick = _swig_property(_opencore.PLAYER__enter_tick_get, _opencore.PLAYER__enter_tick_set)
    __swig_setmethods__["leave_tick"] = _opencore.PLAYER__leave_tick_set
    __swig_getmethods__["leave_tick"] = _opencore.PLAYER__leave_tick_get
    if _newclass:leave_tick = _swig_property(_opencore.PLAYER__leave_tick_get, _opencore.PLAYER__leave_tick_set)
    __swig_setmethods__["ship"] = _opencore.PLAYER__ship_set
    __swig_getmethods__["ship"] = _opencore.PLAYER__ship_get
    if _newclass:ship = _swig_property(_opencore.PLAYER__ship_get, _opencore.PLAYER__ship_set)
    __swig_setmethods__["freq"] = _opencore.PLAYER__freq_set
    __swig_getmethods__["freq"] = _opencore.PLAYER__freq_get
    if _newclass:freq = _swig_property(_opencore.PLAYER__freq_get, _opencore.PLAYER__freq_set)
    __swig_setmethods__["pos"] = _opencore.PLAYER__pos_set
    __swig_getmethods__["pos"] = _opencore.PLAYER__pos_get
    if _newclass:pos = _swig_property(_opencore.PLAYER__pos_get, _opencore.PLAYER__pos_set)
    __swig_setmethods__["x_vel"] = _opencore.PLAYER__x_vel_set
    __swig_getmethods__["x_vel"] = _opencore.PLAYER__x_vel_get
    if _newclass:x_vel = _swig_property(_opencore.PLAYER__x_vel_get, _opencore.PLAYER__x_vel_set)
    __swig_setmethods__["y_vel"] = _opencore.PLAYER__y_vel_set
    __swig_getmethods__["y_vel"] = _opencore.PLAYER__y_vel_get
    if _newclass:y_vel = _swig_property(_opencore.PLAYER__y_vel_get, _opencore.PLAYER__y_vel_set)
    __swig_setmethods__["status"] = _opencore.PLAYER__status_set
    __swig_getmethods__["status"] = _opencore.PLAYER__status_get
    if _newclass:status = _swig_property(_opencore.PLAYER__status_get, _opencore.PLAYER__status_set)
    __swig_setmethods__["here"] = _opencore.PLAYER__here_set
    __swig_getmethods__["here"] = _opencore.PLAYER__here_get
    if _newclass:here = _swig_property(_opencore.PLAYER__here_get, _opencore.PLAYER__here_set)
    __swig_setmethods__["info"] = _opencore.PLAYER__info_set
    __swig_getmethods__["info"] = _opencore.PLAYER__info_get
    if _newclass:info = _swig_property(_opencore.PLAYER__info_get, _opencore.PLAYER__info_set)
    __swig_setmethods__["info_valid"] = _opencore.PLAYER__info_valid_set
    __swig_getmethods__["info_valid"] = _opencore.PLAYER__info_valid_get
    if _newclass:info_valid = _swig_property(_opencore.PLAYER__info_valid_get, _opencore.PLAYER__info_valid_set)
    __swig_setmethods__["einfo"] = _opencore.PLAYER__einfo_set
    __swig_getmethods__["einfo"] = _opencore.PLAYER__einfo_get
    if _newclass:einfo = _swig_property(_opencore.PLAYER__einfo_get, _opencore.PLAYER__einfo_set)
    __swig_setmethods__["einfo_valid"] = _opencore.PLAYER__einfo_valid_set
    __swig_getmethods__["einfo_valid"] = _opencore.PLAYER__einfo_valid_get
    if _newclass:einfo_valid = _swig_property(_opencore.PLAYER__einfo_valid_get, _opencore.PLAYER__einfo_valid_set)
    def __init__(self): 
        this = _opencore.new_PLAYER_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_PLAYER_
    __del__ = lambda self : None;
PLAYER__swigregister = _opencore.PLAYER__swigregister
PLAYER__swigregister(PLAYER_)

class core_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, core_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, core_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["event"] = _opencore.core_data_event_set
    __swig_getmethods__["event"] = _opencore.core_data_event_get
    if _newclass:event = _swig_property(_opencore.core_data_event_get, _opencore.core_data_event_set)
    __swig_setmethods__["p1"] = _opencore.core_data_p1_set
    __swig_getmethods__["p1"] = _opencore.core_data_p1_get
    if _newclass:p1 = _swig_property(_opencore.core_data_p1_get, _opencore.core_data_p1_set)
    __swig_setmethods__["p1_pinfo"] = _opencore.core_data_p1_pinfo_set
    __swig_getmethods__["p1_pinfo"] = _opencore.core_data_p1_pinfo_get
    if _newclass:p1_pinfo = _swig_property(_opencore.core_data_p1_pinfo_get, _opencore.core_data_p1_pinfo_set)
    __swig_setmethods__["p2"] = _opencore.core_data_p2_set
    __swig_getmethods__["p2"] = _opencore.core_data_p2_get
    if _newclass:p2 = _swig_property(_opencore.core_data_p2_get, _opencore.core_data_p2_set)
    __swig_setmethods__["p2_pinfo"] = _opencore.core_data_p2_pinfo_set
    __swig_getmethods__["p2_pinfo"] = _opencore.core_data_p2_pinfo_get
    if _newclass:p2_pinfo = _swig_property(_opencore.core_data_p2_pinfo_get, _opencore.core_data_p2_pinfo_set)
    __swig_setmethods__["msg"] = _opencore.core_data_msg_set
    __swig_getmethods__["msg"] = _opencore.core_data_msg_get
    if _newclass:msg = _swig_property(_opencore.core_data_msg_get, _opencore.core_data_msg_set)
    __swig_setmethods__["msg_name"] = _opencore.core_data_msg_name_set
    __swig_getmethods__["msg_name"] = _opencore.core_data_msg_name_get
    if _newclass:msg_name = _swig_property(_opencore.core_data_msg_name_get, _opencore.core_data_msg_name_set)
    __swig_setmethods__["msg_type"] = _opencore.core_data_msg_type_set
    __swig_getmethods__["msg_type"] = _opencore.core_data_msg_type_get
    if _newclass:msg_type = _swig_property(_opencore.core_data_msg_type_get, _opencore.core_data_msg_type_set)
    __swig_setmethods__["msg_chatname"] = _opencore.core_data_msg_chatname_set
    __swig_getmethods__["msg_chatname"] = _opencore.core_data_msg_chatname_get
    if _newclass:msg_chatname = _swig_property(_opencore.core_data_msg_chatname_get, _opencore.core_data_msg_chatname_set)
    __swig_setmethods__["msg_chatid"] = _opencore.core_data_msg_chatid_set
    __swig_getmethods__["msg_chatid"] = _opencore.core_data_msg_chatid_get
    if _newclass:msg_chatid = _swig_property(_opencore.core_data_msg_chatid_get, _opencore.core_data_msg_chatid_set)
    __swig_setmethods__["alert_name"] = _opencore.core_data_alert_name_set
    __swig_getmethods__["alert_name"] = _opencore.core_data_alert_name_get
    if _newclass:alert_name = _swig_property(_opencore.core_data_alert_name_get, _opencore.core_data_alert_name_set)
    __swig_setmethods__["alert_arena"] = _opencore.core_data_alert_arena_set
    __swig_getmethods__["alert_arena"] = _opencore.core_data_alert_arena_get
    if _newclass:alert_arena = _swig_property(_opencore.core_data_alert_arena_get, _opencore.core_data_alert_arena_set)
    __swig_setmethods__["alert_msg"] = _opencore.core_data_alert_msg_set
    __swig_getmethods__["alert_msg"] = _opencore.core_data_alert_msg_get
    if _newclass:alert_msg = _swig_property(_opencore.core_data_alert_msg_get, _opencore.core_data_alert_msg_set)
    __swig_setmethods__["alert_type"] = _opencore.core_data_alert_type_set
    __swig_getmethods__["alert_type"] = _opencore.core_data_alert_type_get
    if _newclass:alert_type = _swig_property(_opencore.core_data_alert_type_get, _opencore.core_data_alert_type_set)
    __swig_setmethods__["old_ship"] = _opencore.core_data_old_ship_set
    __swig_getmethods__["old_ship"] = _opencore.core_data_old_ship_get
    if _newclass:old_ship = _swig_property(_opencore.core_data_old_ship_get, _opencore.core_data_old_ship_set)
    __swig_setmethods__["old_freq"] = _opencore.core_data_old_freq_set
    __swig_getmethods__["old_freq"] = _opencore.core_data_old_freq_get
    if _newclass:old_freq = _swig_property(_opencore.core_data_old_freq_get, _opencore.core_data_old_freq_set)
    __swig_setmethods__["timer_id"] = _opencore.core_data_timer_id_set
    __swig_getmethods__["timer_id"] = _opencore.core_data_timer_id_get
    if _newclass:timer_id = _swig_property(_opencore.core_data_timer_id_get, _opencore.core_data_timer_id_set)
    __swig_setmethods__["timer_data1"] = _opencore.core_data_timer_data1_set
    __swig_getmethods__["timer_data1"] = _opencore.core_data_timer_data1_get
    if _newclass:timer_data1 = _swig_property(_opencore.core_data_timer_data1_get, _opencore.core_data_timer_data1_set)
    __swig_setmethods__["timer_data2"] = _opencore.core_data_timer_data2_set
    __swig_getmethods__["timer_data2"] = _opencore.core_data_timer_data2_get
    if _newclass:timer_data2 = _swig_property(_opencore.core_data_timer_data2_get, _opencore.core_data_timer_data2_set)
    __swig_setmethods__["cmd_id"] = _opencore.core_data_cmd_id_set
    __swig_getmethods__["cmd_id"] = _opencore.core_data_cmd_id_get
    if _newclass:cmd_id = _swig_property(_opencore.core_data_cmd_id_get, _opencore.core_data_cmd_id_set)
    __swig_setmethods__["cmd_name"] = _opencore.core_data_cmd_name_set
    __swig_getmethods__["cmd_name"] = _opencore.core_data_cmd_name_get
    if _newclass:cmd_name = _swig_property(_opencore.core_data_cmd_name_get, _opencore.core_data_cmd_name_set)
    __swig_setmethods__["cmd_type"] = _opencore.core_data_cmd_type_set
    __swig_getmethods__["cmd_type"] = _opencore.core_data_cmd_type_get
    if _newclass:cmd_type = _swig_property(_opencore.core_data_cmd_type_get, _opencore.core_data_cmd_type_set)
    __swig_setmethods__["cmd_argc"] = _opencore.core_data_cmd_argc_set
    __swig_getmethods__["cmd_argc"] = _opencore.core_data_cmd_argc_get
    if _newclass:cmd_argc = _swig_property(_opencore.core_data_cmd_argc_get, _opencore.core_data_cmd_argc_set)
    __swig_setmethods__["cmd_level"] = _opencore.core_data_cmd_level_set
    __swig_getmethods__["cmd_level"] = _opencore.core_data_cmd_level_get
    if _newclass:cmd_level = _swig_property(_opencore.core_data_cmd_level_get, _opencore.core_data_cmd_level_set)
    __swig_setmethods__["cmd_argv"] = _opencore.core_data_cmd_argv_set
    __swig_getmethods__["cmd_argv"] = _opencore.core_data_cmd_argv_get
    if _newclass:cmd_argv = _swig_property(_opencore.core_data_cmd_argv_get, _opencore.core_data_cmd_argv_set)
    __swig_setmethods__["cmd_argr"] = _opencore.core_data_cmd_argr_set
    __swig_getmethods__["cmd_argr"] = _opencore.core_data_cmd_argr_get
    if _newclass:cmd_argr = _swig_property(_opencore.core_data_cmd_argr_get, _opencore.core_data_cmd_argr_set)
    __swig_setmethods__["killer"] = _opencore.core_data_killer_set
    __swig_getmethods__["killer"] = _opencore.core_data_killer_get
    if _newclass:killer = _swig_property(_opencore.core_data_killer_get, _opencore.core_data_killer_set)
    __swig_setmethods__["killer_pinfo"] = _opencore.core_data_killer_pinfo_set
    __swig_getmethods__["killer_pinfo"] = _opencore.core_data_killer_pinfo_get
    if _newclass:killer_pinfo = _swig_property(_opencore.core_data_killer_pinfo_get, _opencore.core_data_killer_pinfo_set)
    __swig_setmethods__["killed"] = _opencore.core_data_killed_set
    __swig_getmethods__["killed"] = _opencore.core_data_killed_get
    if _newclass:killed = _swig_property(_opencore.core_data_killed_get, _opencore.core_data_killed_set)
    __swig_setmethods__["killed_pinfo"] = _opencore.core_data_killed_pinfo_set
    __swig_getmethods__["killed_pinfo"] = _opencore.core_data_killed_pinfo_get
    if _newclass:killed_pinfo = _swig_property(_opencore.core_data_killed_pinfo_get, _opencore.core_data_killed_pinfo_set)
    __swig_setmethods__["transfer_success"] = _opencore.core_data_transfer_success_set
    __swig_getmethods__["transfer_success"] = _opencore.core_data_transfer_success_get
    if _newclass:transfer_success = _swig_property(_opencore.core_data_transfer_success_get, _opencore.core_data_transfer_success_set)
    __swig_setmethods__["transfer_direction"] = _opencore.core_data_transfer_direction_set
    __swig_getmethods__["transfer_direction"] = _opencore.core_data_transfer_direction_get
    if _newclass:transfer_direction = _swig_property(_opencore.core_data_transfer_direction_get, _opencore.core_data_transfer_direction_set)
    __swig_setmethods__["transfer_filename"] = _opencore.core_data_transfer_filename_set
    __swig_getmethods__["transfer_filename"] = _opencore.core_data_transfer_filename_get
    if _newclass:transfer_filename = _swig_property(_opencore.core_data_transfer_filename_get, _opencore.core_data_transfer_filename_set)
    __swig_setmethods__["query_success"] = _opencore.core_data_query_success_set
    __swig_getmethods__["query_success"] = _opencore.core_data_query_success_get
    if _newclass:query_success = _swig_property(_opencore.core_data_query_success_get, _opencore.core_data_query_success_set)
    __swig_setmethods__["query_resultset"] = _opencore.core_data_query_resultset_set
    __swig_getmethods__["query_resultset"] = _opencore.core_data_query_resultset_get
    if _newclass:query_resultset = _swig_property(_opencore.core_data_query_resultset_get, _opencore.core_data_query_resultset_set)
    __swig_setmethods__["query_user_data"] = _opencore.core_data_query_user_data_set
    __swig_getmethods__["query_user_data"] = _opencore.core_data_query_user_data_get
    if _newclass:query_user_data = _swig_property(_opencore.core_data_query_user_data_get, _opencore.core_data_query_user_data_set)
    __swig_setmethods__["query_name"] = _opencore.core_data_query_name_set
    __swig_getmethods__["query_name"] = _opencore.core_data_query_name_get
    if _newclass:query_name = _swig_property(_opencore.core_data_query_name_get, _opencore.core_data_query_name_set)
    __swig_setmethods__["query_nrows"] = _opencore.core_data_query_nrows_set
    __swig_getmethods__["query_nrows"] = _opencore.core_data_query_nrows_get
    if _newclass:query_nrows = _swig_property(_opencore.core_data_query_nrows_get, _opencore.core_data_query_nrows_set)
    __swig_setmethods__["query_ncols"] = _opencore.core_data_query_ncols_set
    __swig_getmethods__["query_ncols"] = _opencore.core_data_query_ncols_get
    if _newclass:query_ncols = _swig_property(_opencore.core_data_query_ncols_get, _opencore.core_data_query_ncols_set)
    __swig_setmethods__["query_type"] = _opencore.core_data_query_type_set
    __swig_getmethods__["query_type"] = _opencore.core_data_query_type_get
    if _newclass:query_type = _swig_property(_opencore.core_data_query_type_get, _opencore.core_data_query_type_set)
    __swig_setmethods__["victory_freq"] = _opencore.core_data_victory_freq_set
    __swig_getmethods__["victory_freq"] = _opencore.core_data_victory_freq_get
    if _newclass:victory_freq = _swig_property(_opencore.core_data_victory_freq_get, _opencore.core_data_victory_freq_set)
    __swig_setmethods__["victory_jackpot"] = _opencore.core_data_victory_jackpot_set
    __swig_getmethods__["victory_jackpot"] = _opencore.core_data_victory_jackpot_get
    if _newclass:victory_jackpot = _swig_property(_opencore.core_data_victory_jackpot_get, _opencore.core_data_victory_jackpot_set)
    __swig_setmethods__["usercall_functionname"] = _opencore.core_data_usercall_functionname_set
    __swig_getmethods__["usercall_functionname"] = _opencore.core_data_usercall_functionname_get
    if _newclass:usercall_functionname = _swig_property(_opencore.core_data_usercall_functionname_get, _opencore.core_data_usercall_functionname_set)
    __swig_setmethods__["usercall_arg"] = _opencore.core_data_usercall_arg_set
    __swig_getmethods__["usercall_arg"] = _opencore.core_data_usercall_arg_get
    if _newclass:usercall_arg = _swig_property(_opencore.core_data_usercall_arg_get, _opencore.core_data_usercall_arg_set)
    __swig_setmethods__["userevent_libname"] = _opencore.core_data_userevent_libname_set
    __swig_getmethods__["userevent_libname"] = _opencore.core_data_userevent_libname_get
    if _newclass:userevent_libname = _swig_property(_opencore.core_data_userevent_libname_get, _opencore.core_data_userevent_libname_set)
    __swig_setmethods__["userevent_eventname"] = _opencore.core_data_userevent_eventname_set
    __swig_getmethods__["userevent_eventname"] = _opencore.core_data_userevent_eventname_get
    if _newclass:userevent_eventname = _swig_property(_opencore.core_data_userevent_eventname_get, _opencore.core_data_userevent_eventname_set)
    __swig_setmethods__["userevent_arg"] = _opencore.core_data_userevent_arg_set
    __swig_getmethods__["userevent_arg"] = _opencore.core_data_userevent_arg_get
    if _newclass:userevent_arg = _swig_property(_opencore.core_data_userevent_arg_get, _opencore.core_data_userevent_arg_set)
    __swig_setmethods__["ac_old_arena"] = _opencore.core_data_ac_old_arena_set
    __swig_getmethods__["ac_old_arena"] = _opencore.core_data_ac_old_arena_get
    if _newclass:ac_old_arena = _swig_property(_opencore.core_data_ac_old_arena_get, _opencore.core_data_ac_old_arena_set)
    __swig_setmethods__["arena_list"] = _opencore.core_data_arena_list_set
    __swig_getmethods__["arena_list"] = _opencore.core_data_arena_list_get
    if _newclass:arena_list = _swig_property(_opencore.core_data_arena_list_get, _opencore.core_data_arena_list_set)
    __swig_setmethods__["arena_list_count"] = _opencore.core_data_arena_list_count_set
    __swig_getmethods__["arena_list_count"] = _opencore.core_data_arena_list_count_get
    if _newclass:arena_list_count = _swig_property(_opencore.core_data_arena_list_count_get, _opencore.core_data_arena_list_count_set)
    __swig_setmethods__["bot_pid"] = _opencore.core_data_bot_pid_set
    __swig_getmethods__["bot_pid"] = _opencore.core_data_bot_pid_get
    if _newclass:bot_pid = _swig_property(_opencore.core_data_bot_pid_get, _opencore.core_data_bot_pid_set)
    __swig_setmethods__["bot_name"] = _opencore.core_data_bot_name_set
    __swig_getmethods__["bot_name"] = _opencore.core_data_bot_name_get
    if _newclass:bot_name = _swig_property(_opencore.core_data_bot_name_get, _opencore.core_data_bot_name_set)
    __swig_setmethods__["bot_freq"] = _opencore.core_data_bot_freq_set
    __swig_getmethods__["bot_freq"] = _opencore.core_data_bot_freq_get
    if _newclass:bot_freq = _swig_property(_opencore.core_data_bot_freq_get, _opencore.core_data_bot_freq_set)
    __swig_setmethods__["bot_ship"] = _opencore.core_data_bot_ship_set
    __swig_getmethods__["bot_ship"] = _opencore.core_data_bot_ship_get
    if _newclass:bot_ship = _swig_property(_opencore.core_data_bot_ship_get, _opencore.core_data_bot_ship_set)
    __swig_setmethods__["bot_arena"] = _opencore.core_data_bot_arena_set
    __swig_getmethods__["bot_arena"] = _opencore.core_data_bot_arena_get
    if _newclass:bot_arena = _swig_property(_opencore.core_data_bot_arena_get, _opencore.core_data_bot_arena_set)
    __swig_setmethods__["here_first"] = _opencore.core_data_here_first_set
    __swig_getmethods__["here_first"] = _opencore.core_data_here_first_get
    if _newclass:here_first = _swig_property(_opencore.core_data_here_first_get, _opencore.core_data_here_first_set)
    __swig_setmethods__["here_last"] = _opencore.core_data_here_last_set
    __swig_getmethods__["here_last"] = _opencore.core_data_here_last_get
    if _newclass:here_last = _swig_property(_opencore.core_data_here_last_get, _opencore.core_data_here_last_set)
    __swig_setmethods__["spec_first"] = _opencore.core_data_spec_first_set
    __swig_getmethods__["spec_first"] = _opencore.core_data_spec_first_get
    if _newclass:spec_first = _swig_property(_opencore.core_data_spec_first_get, _opencore.core_data_spec_first_set)
    __swig_setmethods__["spec_last"] = _opencore.core_data_spec_last_set
    __swig_getmethods__["spec_last"] = _opencore.core_data_spec_last_get
    if _newclass:spec_last = _swig_property(_opencore.core_data_spec_last_get, _opencore.core_data_spec_last_set)
    __swig_setmethods__["ship_first"] = _opencore.core_data_ship_first_set
    __swig_getmethods__["ship_first"] = _opencore.core_data_ship_first_get
    if _newclass:ship_first = _swig_property(_opencore.core_data_ship_first_get, _opencore.core_data_ship_first_set)
    __swig_setmethods__["ship_last"] = _opencore.core_data_ship_last_set
    __swig_getmethods__["ship_last"] = _opencore.core_data_ship_last_get
    if _newclass:ship_last = _swig_property(_opencore.core_data_ship_last_get, _opencore.core_data_ship_last_set)
    __swig_setmethods__["here_count"] = _opencore.core_data_here_count_set
    __swig_getmethods__["here_count"] = _opencore.core_data_here_count_get
    if _newclass:here_count = _swig_property(_opencore.core_data_here_count_get, _opencore.core_data_here_count_set)
    __swig_setmethods__["spec_count"] = _opencore.core_data_spec_count_set
    __swig_getmethods__["spec_count"] = _opencore.core_data_spec_count_get
    if _newclass:spec_count = _swig_property(_opencore.core_data_spec_count_get, _opencore.core_data_spec_count_set)
    __swig_setmethods__["ship_count"] = _opencore.core_data_ship_count_set
    __swig_getmethods__["ship_count"] = _opencore.core_data_ship_count_get
    if _newclass:ship_count = _swig_property(_opencore.core_data_ship_count_get, _opencore.core_data_ship_count_set)
    __swig_setmethods__["user_data"] = _opencore.core_data_user_data_set
    __swig_getmethods__["user_data"] = _opencore.core_data_user_data_get
    if _newclass:user_data = _swig_property(_opencore.core_data_user_data_get, _opencore.core_data_user_data_set)
    __swig_setmethods__["pinfo_base"] = _opencore.core_data_pinfo_base_set
    __swig_getmethods__["pinfo_base"] = _opencore.core_data_pinfo_base_get
    if _newclass:pinfo_base = _swig_property(_opencore.core_data_pinfo_base_get, _opencore.core_data_pinfo_base_set)
    __swig_setmethods__["parray"] = _opencore.core_data_parray_set
    __swig_getmethods__["parray"] = _opencore.core_data_parray_get
    if _newclass:parray = _swig_property(_opencore.core_data_parray_get, _opencore.core_data_parray_set)
    __swig_setmethods__["phere"] = _opencore.core_data_phere_set
    __swig_getmethods__["phere"] = _opencore.core_data_phere_get
    if _newclass:phere = _swig_property(_opencore.core_data_phere_get, _opencore.core_data_phere_set)
    def __init__(self): 
        this = _opencore.new_core_data()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _opencore.delete_core_data
    __del__ = lambda self : None;
core_data_swigregister = _opencore.core_data_swigregister
core_data_swigregister(core_data)

GameEvent = _opencore.GameEvent

def RegisterCommand(*args):
  return _opencore.RegisterCommand(*args)
RegisterCommand = _opencore.RegisterCommand

def RegisterPlugin(*args):
  return _opencore.RegisterPlugin(*args)
RegisterPlugin = _opencore.RegisterPlugin

def SetTimer(*args):
  return _opencore.SetTimer(*args)
SetTimer = _opencore.SetTimer

def KillTimer(*args):
  return _opencore.KillTimer(*args)
KillTimer = _opencore.KillTimer

def Log(*args):
  return _opencore.Log(*args)
Log = _opencore.Log

def LogFmt(*args):
  return _opencore.LogFmt(*args)
LogFmt = _opencore.LogFmt

def StartBot(*args):
  return _opencore.StartBot(*args)
StartBot = _opencore.StartBot

def StopBot(*args):
  return _opencore.StopBot(*args)
StopBot = _opencore.StopBot

def StopBotFmt(*args):
  return _opencore.StopBotFmt(*args)
StopBotFmt = _opencore.StopBotFmt

def Go(*args):
  return _opencore.Go(*args)
Go = _opencore.Go

def SetPosition(*args):
  return _opencore.SetPosition(*args)
SetPosition = _opencore.SetPosition

def SetFreq(*args):
  return _opencore.SetFreq(*args)
SetFreq = _opencore.SetFreq

def SetShip(*args):
  return _opencore.SetShip(*args)
SetShip = _opencore.SetShip

def PickupFlag(*args):
  return _opencore.PickupFlag(*args)
PickupFlag = _opencore.PickupFlag

def QueueGetFile(*args):
  return _opencore.QueueGetFile(*args)
QueueGetFile = _opencore.QueueGetFile

def QueueSendFile(*args):
  return _opencore.QueueSendFile(*args)
QueueSendFile = _opencore.QueueSendFile

def GetOpLevel(*args):
  return _opencore.GetOpLevel(*args)
GetOpLevel = _opencore.GetOpLevel

def FindPlayerName(*args):
  return _opencore.FindPlayerName(*args)
FindPlayerName = _opencore.FindPlayerName

def FindPlayerPid(*args):
  return _opencore.FindPlayerPid(*args)
FindPlayerPid = _opencore.FindPlayerPid

def ArenaMessage(*args):
  return _opencore.ArenaMessage(*args)
ArenaMessage = _opencore.ArenaMessage

def ChatMessage(*args):
  return _opencore.ChatMessage(*args)
ChatMessage = _opencore.ChatMessage

def ChatName(*args):
  return _opencore.ChatName(*args)
ChatName = _opencore.ChatName

def PubMessage(*args):
  return _opencore.PubMessage(*args)
PubMessage = _opencore.PubMessage

def PrivMessage(*args):
  return _opencore.PrivMessage(*args)
PrivMessage = _opencore.PrivMessage

def PrivMessageFmt(*args):
  return _opencore.PrivMessageFmt(*args)
PrivMessageFmt = _opencore.PrivMessageFmt

def RmtMessage(*args):
  return _opencore.RmtMessage(*args)
RmtMessage = _opencore.RmtMessage

def RmtMessageFmt(*args):
  return _opencore.RmtMessageFmt(*args)
RmtMessageFmt = _opencore.RmtMessageFmt

def TeamMessage(*args):
  return _opencore.TeamMessage(*args)
TeamMessage = _opencore.TeamMessage

def TeamMessageFmt(*args):
  return _opencore.TeamMessageFmt(*args)
TeamMessageFmt = _opencore.TeamMessageFmt

def FreqMessage(*args):
  return _opencore.FreqMessage(*args)
FreqMessage = _opencore.FreqMessage

def FreqMessageFmt(*args):
  return _opencore.FreqMessageFmt(*args)
FreqMessageFmt = _opencore.FreqMessageFmt

def Reply(*args):
  return _opencore.Reply(*args)
Reply = _opencore.Reply

def SendPlayer(*args):
  return _opencore.SendPlayer(*args)
SendPlayer = _opencore.SendPlayer

def Query(*args):
  return _opencore.Query(*args)
Query = _opencore.Query

def QueryFmt(*args):
  return _opencore.QueryFmt(*args)
QueryFmt = _opencore.QueryFmt

def QueryEscape(*args):
  return _opencore.QueryEscape(*args)
QueryEscape = _opencore.QueryEscape

def UserEvent(*args):
  return _opencore.UserEvent(*args)
UserEvent = _opencore.UserEvent

def UserCall(*args):
  return _opencore.UserCall(*args)
UserCall = _opencore.UserCall

def DelimArgs(*args):
  return _opencore.DelimArgs(*args)
DelimArgs = _opencore.DelimArgs

def ArgCount(*args):
  return _opencore.ArgCount(*args)
ArgCount = _opencore.ArgCount

def AtoiArg(*args):
  return _opencore.AtoiArg(*args)
AtoiArg = _opencore.AtoiArg

def DelimCount(*args):
  return _opencore.DelimCount(*args)
DelimCount = _opencore.DelimCount

def TicksToText(*args):
  return _opencore.TicksToText(*args)
TicksToText = _opencore.TicksToText

def IsPub(*args):
  return _opencore.IsPub(*args)
IsPub = _opencore.IsPub

def IsSubarena(*args):
  return _opencore.IsSubarena(*args)
IsSubarena = _opencore.IsSubarena

def IsPriv(*args):
  return _opencore.IsPriv(*args)
IsPriv = _opencore.IsPriv

def GetTicksMs():
  return _opencore.GetTicksMs()
GetTicksMs = _opencore.GetTicksMs

def GetConfigInt(*args):
  return _opencore.GetConfigInt(*args)
GetConfigInt = _opencore.GetConfigInt

def GetConfigString(*args):
  return _opencore.GetConfigString(*args)
GetConfigString = _opencore.GetConfigString

def ConfigKeyExists(*args):
  return _opencore.ConfigKeyExists(*args)
ConfigKeyExists = _opencore.ConfigKeyExists

def GetPlayerInfo(*args):
  return _opencore.GetPlayerInfo(*args)
GetPlayerInfo = _opencore.GetPlayerInfo
# This file is compatible with both classic and new-style classes.


